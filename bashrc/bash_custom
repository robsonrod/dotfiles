# Starship 
eval "$(starship init bash)"

# Zoxide
eval "$(zoxide init bash)"


# ASDF configuration
if [ -f ${HOME}/.asdf/asdf.sh ]; then
   . ${HOME}/.asdf/asdf.sh
   . ${HOME}/.asdf/completions/asdf.bash
fi

# Prompt GPG password
export GPG_TTY=$(tty)

# Git alias
alias gclo='git clone'
alias gadd='git add'
alias grm='git rm'
alias gall='git add ./'
alias gfth='git fetch --all --prune --verbose'
alias grst='git reset HEAD'
alias gmrg="git merge"
alias gsts='git status'
alias gpll='git pull'
alias gplp='git pull && git push'
alias gpsh='git push'
alias gcmm='git commit -v -m'
alias gbcm='git branch -m'
alias gbcd='git branch -D'
alias gchm='git checkout master'
alias gchb='git checkout -b'
alias glgr="git log --graph --pretty=format:'%C(bold)%h%Creset%C(magenta)%d%Creset %s %C(yellow)<%an> %C(cyan)(%cr)%Creset' --abbrev-commit --date=relative"
alias glgs="glgr --stat"
alias gstb="git stash branch"
alias gstd="git stash drop"
alias gstl="git stash list"
alias gstp="git stash pop"

# Aliases
alias g='git'
alias h='history'
alias v='vim'
alias e='emacs -nw'
alias p='cd ${PROJECT_FOLDER}'
alias ..='cd ..' 
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ls="exa"
alias ll="exa -alh"
alias tree="exa --tree"
alias cd="z"
alias grep="rg"

## Archive extraction function ##
### Usage: ex <file> ###
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

alias cp="cp -i"
alias mv='mv -i'
alias rm='rm -i'

opendebug () {
 logdt=`date +"%Y-%m-%d"`;
 dev=$1;
 geo=$3;

 log=~/tmp/logue/$2-$logdt;
 title=$4;

 shift 4;
 echo "putty -log $log.log -serial -sercfg 115200,8,n,1 ${dev} -geometry ${geo} -title \"${title}\" $@";
 putty -log $log.log -sl 2000 -serial -sercfg 115200,8,n,1 ${dev} -geometry ${geo} -title "${title}" $@ &
 echo "done."
}

opendebugusb () {
 opendebug /dev/ttyUSB1 shell 100x80+5290+20 "tty-shell - PuTTY ";
 opendebug /dev/ttyUSB0 print 80x80+5920+20 "tty-print - PuTTY "
}
